"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const userController_1 = __importDefault(require("../controllers/userController"));
const userServices_1 = __importDefault(require("../services/userServices"));
const userRepositories_1 = __importDefault(require("../repositories/userRepositories"));
const otpRepositories_1 = __importDefault(require("../repositories/otpRepositories"));
const s3UploadMiddleware_1 = __importDefault(require("../middleware/s3UploadMiddleware"));
const userAuthMiddleware_1 = __importDefault(require("../middleware/userAuthMiddleware"));
const paymentController_1 = __importDefault(require("../controllers/paymentController"));
const paymentServics_1 = __importDefault(require("../services/paymentServics"));
const paymentRepositories_1 = __importDefault(require("../repositories/paymentRepositories"));
const userRoute = express_1.default.Router();
const otpRepositories = new otpRepositories_1.default();
const userRepository = new userRepositories_1.default();
const useServices = new userServices_1.default(userRepository, otpRepositories);
const userController = new userController_1.default(useServices);
const paymentRepositories = new paymentRepositories_1.default();
const paymentService = new paymentServics_1.default(paymentRepositories);
const paymentController = new paymentController_1.default(paymentService);
userRoute.post("/booking", userController.mechBooking.bind(userController));
userRoute.get("/fetchBookData", userController.fetchBookData.bind(userController));
userRoute.post("/updateProfle", s3UploadMiddleware_1.default, userController.updateProfile.bind(userController));
userRoute.get("/getProfile", userAuthMiddleware_1.default, userController.getProfile.bind(userController));
userRoute.get("/chat/allUsers", userController.allUsers.bind(userController));
userRoute.post("/chat/create", userController.createChat.bind(userController));
userRoute.get("/chat/fetchChats", userController.fetchChats.bind(userController));
userRoute.post("/chat/sendMessage", userController.sendMessage.bind(userController));
userRoute.get("/chat/allMesssge/:chatId", userController.allMessagess.bind(userController));
userRoute.get("/fetchPayment", userController.fetchPayment.bind(userController));
userRoute.post("/create-checkout-session", paymentController.createCheckoutSession.bind(paymentController));
userRoute.post("/webhook", express_1.default.raw({ type: 'application/json' }), paymentController.webhook.bind(paymentController));
userRoute.post("/update-payment-status", userAuthMiddleware_1.default, userController.updatePayment.bind(userController));
userRoute.post("/feedback", userAuthMiddleware_1.default, userController.feedBack.bind(userController));
userRoute.get("/feedbackcheck", userAuthMiddleware_1.default, userController.feedBackCheck.bind(userController));
userRoute.post("/updateFeedback", userAuthMiddleware_1.default, userController.updateFeedback.bind(userController));
userRoute.get("/fetchblogs", userController.fetchBlogs.bind(userController));
userRoute.get("/fetchallblogs", userController.fetchAllBlogs.bind(userController));
userRoute.get("/fetchAllService", userController.fetchAllService.bind(userController));
userRoute.get("/fetchAllshop", userController.fetchAllshop.bind(userController));
userRoute.get("/fetchFreelancer", userController.fetchFreelancer.bind(userController));
userRoute.get("/bookingdata", userController.bookingdata.bind(userController));
userRoute.get("/reviewData", userController.reviewData.bind(userController));
exports.default = userRoute;
