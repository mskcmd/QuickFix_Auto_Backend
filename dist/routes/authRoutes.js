"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const userController_1 = __importDefault(require("../controllers/userController"));
const userServices_1 = __importDefault(require("../services/userServices"));
const userRepositories_1 = __importDefault(require("../repositories/userRepositories"));
const otpRepositories_1 = __importDefault(require("../repositories/otpRepositories"));
const mechanicController_1 = __importDefault(require("../controllers/mechanicController"));
const mechanicServices_1 = __importDefault(require("../services/mechanicServices"));
const mechanicRepositories_1 = __importDefault(require("../repositories/mechanicRepositories"));
const adminRepositories_1 = __importDefault(require("../repositories/adminRepositories"));
const adminServics_1 = __importDefault(require("../services/adminServics"));
const adminController_1 = __importDefault(require("../controllers/adminController"));
const authRoute = express_1.default.Router();
const otpRepositories = new otpRepositories_1.default();
const userRepository = new userRepositories_1.default();
const useServices = new userServices_1.default(userRepository, otpRepositories);
const userController = new userController_1.default(useServices);
const mechanicRepositories = new mechanicRepositories_1.default();
const mechanicServices = new mechanicServices_1.default(mechanicRepositories, otpRepositories);
const mechanicController = new mechanicController_1.default(mechanicServices);
const adminRepositories = new adminRepositories_1.default();
const adminServices = new adminServics_1.default(adminRepositories);
const adminController = new adminController_1.default(adminServices);
authRoute.post("/signup", userController.signup.bind(userController));
authRoute.post("/veryfy-otp", userController.veryfyOtp.bind(userController));
authRoute.post("/login", userController.login.bind(userController));
authRoute.post('/google-login', userController.googlelogin.bind(userController));
authRoute.get("/resendotp", userController.resendOtp.bind(userController));
authRoute.get("/forgetPassword", userController.forgetPassword.bind(userController));
authRoute.get("/veryfyotpreset", userController.veryfyOtpreset.bind(userController));
authRoute.post("/resetPassword", userController.resetPassword.bind(userController));
authRoute.get("/userLogout", userController.userLogout.bind(userController));
authRoute.get("/serchMech", userController.searchMechanic.bind(userController));
authRoute.post("/mechanic/signup", mechanicController.mechanicSignup.bind(mechanicController));
authRoute.post("/mechanic/veryfy-otp", mechanicController.veryfyOtp.bind(mechanicController));
authRoute.post("/mechanic/login", mechanicController.login.bind(mechanicController));
authRoute.post("/mechanic/resendotp", mechanicController.resendOtp.bind(mechanicController));
authRoute.get("/mechanic/forgetPassword", mechanicController.forgetPassword.bind(mechanicController));
authRoute.get("/mechanic/veryfyotpreset", mechanicController.veryfyOtpreset.bind(mechanicController));
authRoute.post("/mechanic/resetPassword", mechanicController.resetPassword.bind(mechanicController));
authRoute.get("/mechanic/mechLogout", mechanicController.mechLogout.bind(mechanicController));
authRoute.post("/admin/login", adminController.Login.bind(adminController));
authRoute.get("/admin/adminLogout", adminController.adminLogout.bind(adminController));
exports.default = authRoute;
